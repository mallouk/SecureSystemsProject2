#!/bin/bash

#Can't generate client cert without CA cert
if [ ! -d "ca" ]; then
    echo "You must generate your CA's certs before running this script."
    exit 1
fi

#Need to give client parameter name
if [ "$#" -ne 1 ]; then
    echo "Need to have a parameter for the client you're creating."
    exit 1
fi


OPENSSLFILE_CA=securesysCA
OPENSSLFILE_CLIENT=securesysClient
CLIENT=$1

#Client must have unique name
if [ -d ${CLIENT} ]; then
    echo "Somebody has already claimed that client name. Try another one."
    exit 1
fi

mkdir clients/${CLIENT}

#Generate client key
echo "Generating Client Side Key..."
openssl genrsa -des3 -out ./clients/${CLIENT}/${OPENSSLFILE_CLIENT}.key 1024 -config ./openssl.cnf

#Generate client cert request
echo ""
echo "Generating Client Cert Request..."
openssl req -new -key ./clients/${CLIENT}/${OPENSSLFILE_CLIENT}.key -out ./clients/${CLIENT}/${OPENSSLFILE_CLIENT}.csr -config ./openssl.cnf

#Generate client cert
echo ""
echo "Signing Client Key with CA Key..."
openssl ca -days 365 -in ./clients/${CLIENT}/${OPENSSLFILE_CLIENT}.csr -cert ./ca/${OPENSSLFILE_CA}.crt -keyfile ./ca/${OPENSSLFILE_CA}.key -out ./clients/${CLIENT}/${OPENSSLFILE_CLIENT}.crt -config ./openssl.cnf

#Update permissions
chmod ugo-rwx,u+r clients/${CLIENT}/${OPENSSLFILE_CLIENT}.key
